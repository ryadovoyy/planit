generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  roles     Role[]
  projects  Project[]
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Project {
  id          Int         @id @default(autoincrement())
  title       String
  description String?
  createdAt   DateTime    @default(now())
  userId      Int
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  lists       List[]
  taskFields  TaskField[]
}

model List {
  id        Int     @id @default(autoincrement())
  title     String
  position  Int
  projectId Int
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  tasks     Task[]
}

model Task {
  id                  Int                      @id @default(autoincrement())
  title               String
  description         String?
  createdAt           DateTime                 @default(now())
  position            Int
  listId              Int
  list                List                     @relation(fields: [listId], references: [id], onDelete: Cascade)
  fieldNumericValues  TaskFieldNumericValue[]
  fieldStringValues   TaskFieldStringValue[]
  fieldDropdownValues TaskFieldDropdownValue[]
}

model TaskField {
  id              Int                       @id @default(autoincrement())
  title           String
  type            TaskFieldType
  projectId       Int
  project         Project                   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  dropdownOptions TaskFieldDropdownOption[]
  numericValues   TaskFieldNumericValue[]
  stringValues    TaskFieldStringValue[]
  dropdownValues  TaskFieldDropdownValue[]

  @@unique([projectId, title, type])
}

model TaskFieldDropdownOption {
  id             Int                      @id @default(autoincrement())
  value          String
  taskFieldId    Int
  taskField      TaskField                @relation(fields: [taskFieldId], references: [id], onDelete: Cascade)
  dropdownValues TaskFieldDropdownValue[]

  @@unique([taskFieldId, value])
}

model TaskFieldNumericValue {
  taskFieldId Int
  taskId      Int
  value       Float
  taskField   TaskField @relation(fields: [taskFieldId], references: [id], onDelete: Cascade)
  task        Task      @relation(fields: [taskId], references: [id], onDelete: Cascade)

  @@id([taskFieldId, taskId])
}

model TaskFieldStringValue {
  taskFieldId Int
  taskId      Int
  value       String
  taskField   TaskField @relation(fields: [taskFieldId], references: [id], onDelete: Cascade)
  task        Task      @relation(fields: [taskId], references: [id], onDelete: Cascade)

  @@id([taskFieldId, taskId])
}

model TaskFieldDropdownValue {
  taskFieldId      Int
  taskId           Int
  dropdownOptionId Int
  taskField        TaskField               @relation(fields: [taskFieldId], references: [id], onDelete: Cascade)
  task             Task                    @relation(fields: [taskId], references: [id], onDelete: Cascade)
  dropdownOption   TaskFieldDropdownOption @relation(fields: [dropdownOptionId], references: [id], onDelete: Cascade)

  @@id([taskFieldId, taskId])
}

enum TaskFieldType {
  NUMERIC
  STRING
  DROPDOWN
}
